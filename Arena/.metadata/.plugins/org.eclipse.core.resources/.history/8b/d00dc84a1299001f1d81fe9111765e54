import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.*;

public class PlayerCharacter extends JLabel{

	private int direction = 0;
	private boolean left = true;
	
	private Icon upOne;
	private Icon upTwo;
	private Icon rightOne;
	private Icon rightTwo;
	private Icon leftOne;
	private Icon leftTwo;
	private Icon downOne;
	private Icon downTwo;
	
	public PlayerCharacter()
	{
		buildStepIcons("resources/Character/Up1.png", upOne);
		buildStepIcons("resources/Character/Up2.png", upTwo);
		buildStepIcons("resources/Character/Down1.png,", downOne);
		buildStepIcons("resources/Character/Down2.png,", downTwo);
		buildStepIcons("resources/Character/Left1.png", leftOne);
		buildStepIcons("resources/Character/Left2.png", leftTwo);
		buildStepIcons("resources/Character/Right1.png", rightOne);
		buildStepIcons("resources/Character/Right2.png", rightTwo);
		
		this.setIcon(downOne);
	}
	
	private void buildStepIcons(String iconLocation, Icon toMake)
	{
		try
		{
			File icon = new File(iconLocation + "1.png");
			FileInputStream iconReader = new FileInputStream(icon);
			byte[] iconBytes = new byte[iconReader.available()];
			iconReader.read(iconBytes);
			toMake = new ImageIcon(iconBytes);
		} catch (FileNotFoundException fofe) 
		{
			
		} catch (IOException ioe)
		{
		}
		
	}
	
	public void stepped(int direction, boolean left)
	{
		switch(direction)
		{
			case 0:
			{
				if (left)
				{
					this.setIcon(downOne);
				} 
				else
				{
					this.setIcon(downTwo);
				}
				break;
			}
			case 1:
			{
				if (left)
				{
					this.setIcon(upOne);
				} 
				else
				{
					this.setIcon(upTwo);
				}
				break;
			}
			case 2:
			{
				if (left)
				{
					this.setIcon(leftOne);
				} 
				else
				{
					this.setIcon(leftTwo);
				}
				break;
			}
			case 3:
			{
				if (left)
				{
					this.setIcon(rightOne);
				} 
				else
				{
					this.setIcon(rightTwo);
				}
				break;
			}
		}
	}
	
	class Walker extends Thread
	{
		int direction = 0;
		boolean left = true;
		PlayerCharacter walkee;
		
		public Walker(PlayerCharacter walker)
		{
			this.walkee = walkee;
		}
		
		public void run()
		{
			try {
				
			
				walkee.stepped(direction, left);
				left = !left;
				
				this.sleep(100);
			}
			catch (InterruptedException ie)
			{
			}
			
		}
	
	}
}
